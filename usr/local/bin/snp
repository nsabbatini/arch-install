#!/bin/bash

# Runs a command wrapped with snapper pre-post snapshots
# Usage: $ sudo snp <commands>
# Examples:
#    $ sudo snp pacman -Syu
#    $ sudo snp yay -Syu

[[ $EUID -eq 0 ]] || { echo "Need to run snp with sudo"; exit 1; }

log_path="/var/log/snp"
date=$(date "+%Y-%m-%d-%H%M%S")
log_file="${log_path}/snp_${date}.log"

[ -d ${log_path} ] || { mkdir -p ${log_path}; }

arg="$@"
[[ "${arg}" =~ ^sudo.* ]] && { echo "Command after snp does not need sudo"; exit 1; }

# grub-btrfsd takes around 8 seconds to finish; this function is used to wait for it to finish
wait_grub_btrfsd() {
    N=$1
    i=0
    printf "Waiting for grub_btrfsd to finish..."
    while [[ $i -lt $N ]]; do
        sleep 1
        ((i++))
    done
    printf "\n"
}

echo "Logging to: ${log_file}"
exec &> >(tee -a ${log_file})

snapshot_nbr=$(snapper create --type=pre --cleanup-algorithm=number --print-number --description="${arg}")
wait_grub_btrfsd 10
echo "New pre snapshot with number ${snapshot_nbr}"

# yay needs to run as normal user, so we use sudo to do it
echo "Running command \"${arg}\""
if [[ "$arg" =~ ^yay.* ]]; then
    cmd="sudo -u narcizo stdbuf -oL -eL ${arg}"
else
    cmd="stdbuf -oL -eL ${arg}"
fi

eval "$cmd"

snapshot_nbr=$(snapper create --type=post --cleanup-algorithm=number --print-number --pre-number="${snapshot_nbr}")
wait_grub_btrfsd 10
echo -e "\nNew post snapshot with number ${snapshot_nbr}\n"

exit 0
