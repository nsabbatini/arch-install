# #######################################################################################
# Basic preparations
#   1. connect ethernet cable
#   2. attach usb with Arch Linux install media and boot from it
# #######################################################################################

# If keyboard layout is not 'us'
localectl list-keymaps | grep br
loadkeys br-latin1-us

# If not connected with ethernet, connect to wifi
iwctl device list
iwctl station <device> scan
iwctl station <device> get-networks
iwctl station <device> connect <network>

# Set location and time zone
timedatectl set-ntp true
timedatectl set-timezone America/Sao_Paulo 

# Create root password
passwd

# Find the IP address, so we can ssh from another Linux host
ip a

# Now, it is easier to make an ssh connection from another linux machine.
# From another host:
ssh root@<ip_address>

# Update the keyring and install git
pacman -Sy --needed archlinux-keyring git

# Download the install scripts
git clone https://github.com/nsabbatini/arch-install.git

###################################################################
#                       DON'T FORGET                              #
# Configure parameters in file /root/arch-install/bin/parameters.sh
###################################################################

# Run the pre-chroot script. If pacstrap fails, fix the issue
# and run again with the '-s' argument, so that everything 
# before pacstrap is skipped
/root/arch-install/bin/arch.sh
#/root/arch-install/bin/arch.sh -s

# Save the log
cp /root/arch.log /mnt/root/

# Run the post-chroot script
arch-chroot /mnt bash -c "/root/arch-install/bin/arch-chroot.sh"

# Exit from remote machine
exit

# Back to local host
poweroff


# ###################################################################################
# Power-on, login as normal user
# ###################################################################################

# Copy the post-install scripts that was copied to /root by the install script.
sudo cp /root/arch-install/bin/arch-post-install.sh .
sudo chown $USER: arch-post-install.sh

# Choose the type of machine (assumed desktop has games and wifi is not used)
#machine="desktop"
machine="laptop"

# Assume a Brother printer/scanner needs to be configured; git its IP address
scanner_ip="192.168.1.244"

# Run the post-install script, which will restore home directory backup. If backup was
# not available or failed somehow, see below how to create some of the missing data.
./arch-post-install.sh $machine $scanner_ip

# We can now remove the post install file from the home directory
rm arch-post-install.sh

# The following command allows us to configure dark theme to gui applications that need elevated priviledges (sudo).
# The resulting configurations are stored in the /root/.config directory
sudo pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY KDE_SESSION_VERSION=6 KDE_FULL_SESSION=true dbus-launch systemsettings
# Choose breeze dark for global theme, download catppuccin Frappe Flamingo color scheme and apply,
# then change fonts to the same ones already being used.


##################################################################################
# Use Yubikey to provide passwordless acess to sudo, su
##################################################################################

# Passwordless 'sudo'
sudo vim /etc/pam.d/sudo
# Add before the other entries:
   auth sufficient pam_u2f.so cue [cue_prompt=Tap YubiKey]

# Passwordless 'su', 'su -' (uses the root account password)
su -
mkdir -p .config/Yubico
pamu2fcfg > .config/Yubico/u2f_keys
vim /etc/pam.d/su
# Add before "auth required pam_unix.so"
   auth sufficient pam_u2f.so cue [cue_prompt=Tap YubiKey]
# Repeat for /etc/pam/su-l
exit


##################################################################################
# Configure the Brother printer
##################################################################################

# Open CUPS (http:localhost:631) in a web browser
#    Admin -> Add printer -> LPD/LPR
#    Connection: lpd://192.168.1.244/binary-p1
#    Name: brlaser, Description: DCP-B7520DW
#    Maker/Manufacturer: Brother
#    Click on "Brother" and select driver (not the driverless one)


##################################################################################
# Configure grub
##################################################################################

# If the grub fonts are too small, edit /etc/default/grub and change the following:
#GRUB_GFXMODE=auto
GRUB_GFXMODE=1024x768

# Then run:
sudo grub-mkconfig -o /boot/grub/grub.cfg


##################################################################################
# If not able to recover backup, the following can be recreated
##################################################################################

# Instructions to configure the KDE Plasma desktop are provided in a separate file
# (../doc/kde-plasma-configuration)

# Create ssh keys and export it to other machines
ssh-keygen -t rsa
ssh-copy-id <other_server>

# Create Yubico keys; connect Yubikey first
sudo pacman -S pam-u2f
mkdir ~/.config/Yubico
pamu2fcfg > ~/.config/Yubico/u2f_keys

# Config files to some applications
cat << EOF > /home/$USER/.config/chrome-flags.conf
--enable-features=UseOzonePlatform
--ozone-platform=wayland
--disable-features=GlobalShortcutsPortal
EOF

cat << EOF > /home/$USER/.config/electron-flags.conf
--enable-features=WaylandWindowDecorations
--ozone-platform-hint=auto
EOF

cat << EOF > /home/$USER/.config/spotify-flags.conf
--enable-features=WaylandWindowDecorations
--ozone-platform-hint=auto
EOF
